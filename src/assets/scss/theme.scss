@use "sass:map";
@import "./variables.scss";
@import "./mixins.scss";
@import "./decoration.scss";

.button {
  $border-radius: 4px;
  $border-width: 2px;
  $font-weight: 600;
  $font-size: 15px;

  line-height: 1.75;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  outline: none;
  cursor: pointer;
  transition: color $g-anime, background-color $g-anime, border-color $g-anime,
    color $g-anime;

  &:disabled,
  &[role-disabled="true"] {
    pointer-events: none;
  }

  &.full-width {
    width: 100%;
  }

  &.basic {
    border-radius: $border-radius;
    padding: 8px 16px;
    @include font($color: $pickledBluewood, $fw: $font-weight);

    &:disabled {
      color: $disabledFont;
    }
  }

  &.raised {
    border-radius: $border-radius;
    @include font($color: $baseWeak, $fw: $font-weight);

    .before-text-icon {
      color: $baseWeak;
    }

    &:not(:disabled) {
      background-color: $purpleHeart;

      &:hover {
        background-color: #9f65ff;
      }
    }

    &:disabled,
    &[role-disabled="true"] {
      color: $baseWeak !important;
      background-color: #d3c8f1;
    }
  }

  &.light {
    border-radius: 5px;
    @include font($fw: $font-weight);

    &:not(:disabled) {
      background-color: $baseWeak;
      color: $pickledBluewood;
      font-weight: $font-weight;
      box-shadow: 0 4px 4px rgb(0 0 0 / 25%);
      border-bottom: 2px solid #6202ee;
    }

    &:disabled,
    &[role-disabled="true"] {
      background-color: $mercury;
    }

    &.readonly {
      color: #707797;
      background-color: transparent;
      box-shadow: none;
      border: none;
    }
  }

  &.stroke {
    border-radius: $border-radius;
    border: $border-width solid;
    background-color: transparent;

    @include font($color: $purpleHeart, $fw: $font-weight);

    .before-text-icon {
      color: $purpleHeart;
    }

    &:not(:disabled) {
      border-color: $purpleHeart;

      &:hover {
        background-color: $purpleHeart;
        color: $baseWeak;
      }
    }

    &:disabled,
    &[role-disabled="true"] {
      border-color: $cadetBlue;
      color: $disabledFont !important;
    }
  }

  &.status {
    border-radius: $border-radius;
    border: 1px solid;
    background-color: transparent;
    @include font($fw: $font-weight);

    &:not(:disabled, [role-disabled="true"]) {
      @each $status, $color in $statuses-bg-colors {
        &[data-status="#{$status}"] {
          @include status-color($status, color);
          @include status-color($status, border-color);
        }
      }
    }

    &:disabled,
    &[role-disabled="true"] {
      border-color: $cadetBlue;
      color: $disabledFont;
    }
  }

  &.icon {
    $sizes: (
      "small": 15px,
      "medium": 23px,
      "large": 30px,
    );

    font-size: map.get($sizes, "medium") !important;
    height: auto !important;
    width: auto !important;
    padding: 0 !important;

    &:not(:disabled) {
      color: $purpleHeart;
    }

    &:disabled,
    &[role-disabled="true"] {
      color: $disabledFont;
    }

    &.small {
      font-size: map.get($sizes, "small") !important;
    }

    &.medium {
      font-size: map.get($sizes, "medium") !important;
    }

    &.large {
      font-size: map.get($sizes, "large") !important;
    }
  }

  &.fab,
  &.mini-fab {
    color: $baseWeak;
    padding: 0 !important;

    &:not(:disabled) {
      background-color: $purpleHeart;
    }

    &:disabled,
    &[role-disabled="true"] {
      color: $baseWeak !important;
      background-color: #d3c8f1 !important;
    }
  }

  &.fab {
    font-size: 24px !important;
  }

  ::ng-deep {
    .mat-button-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
    }
  }

  &:disabled,
  &[role-disabled="true"] {
    pointer-events: none;
  }

  &.basic,
  &.raised,
  &.stroke,
  &.status,
  &.light {
    $font-sizes: (
      "small": 15px,
      "medium": 17px,
      "large": 19px,
    );
    $icon-sizes: (
      "small": 22px,
      "medium": 25px,
      "large": 26px,
    );

    &.small {
      font-size: map.get($font-sizes, "small");
      font-weight: 400;
      padding: 8px 16px;

      .before-text-icon {
        font-size: map.get($icon-sizes, "small");
      }
    }

    &.medium {
      font-size: map.get($font-sizes, "medium");
      padding: 10px 18px;

      .before-text-icon {
        font-size: map.get($icon-sizes, "medium");
      }
    }

    &.large {
      font-size: map.get($font-sizes, "large");
      padding: 12px 20px;

      .before-text-icon {
        font-size: map.get($icon-sizes, "large");
      }
    }
  }

  &.raised.small {
    padding: 9px 16px;
  }
}

.mat-step-icon-content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.mat-step-header {
  .mat-step-icon {
    height: 40px;
    width: 40px;

    &.mat-step-icon-selected,
    &.mat-step-icon-state-done {
      background-color: $purpleHeart;
    }
  }
}

.mat-slide-toggle-text {
  @include font(16px, $pickledBluewood, 400);
}

.status-indicator {
  width: 25px;
  height: 25px;
  min-width: 25px;
  border: 5px solid $baseWeak;
  border-radius: 50%;

  &[data-status="default"] {
    background-color: $default-color;
  }

  &[data-status="success"] {
    background-color: $success-color;
  }

  &[data-status="warning"] {
    background-color: $warning-color;
  }

  &[data-status="error"] {
    background-color: $error-color;
  }
}

.button {
  .mat-button-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }
}

.transparent {
  background-color: transparent;
}

.mat-stepper-vertical-line::before {
  left: 7px !important;
}

// * Checkbox
.mat-checkbox-checked.mat-accent .mat-checkbox-background,
.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {
  background: $purpleHeart !important;
}

// * Input slider

.mat-slide-toggle {
  .mat-slide-toggle-content {
    @include font();
  }

  .mat-slide-toggle-bar {
    background-color: rgba($cadetBlue, 0.5) !important;
  }

  .mat-slide-toggle-thumb {
    background-color: $cadetBlue !important;
  }

  &.mat-checked {
    .mat-slide-toggle-bar,
    .mat-ripple-element {
      background-color: rgba($purpleHeart, 0.5) !important;
    }

    .mat-slide-toggle-thumb {
      background-color: $purpleHeart !important;
    }
  }
}

// * Datepicker

.mat-calendar-body-selected {
  background-color: $purpleHeart !important;
}

.mat-calendar-body-in-range::before {
  background-color: rgba($purpleHeart, 0.2) !important;
}

.mat-calendar-body-cell:hover {
  .mat-calendar-body-cell-content {
    background-color: rgba($purpleHeart, 0.2) !important;
  }
}

// * ngx-toastr

.toast-container {
  .toast-title {
    @include font($fw: 500, $color: $baseWeak);
  }

  .toast-message {
    @include font($fw: 200, $color: $baseWeak);
  }
}

// ngx-toastr

.url-prefix {
  display: block;
  transform: translateY(-6px);
  @include font(15px, $pickledBluewood);
}

.reason {
  display: flex;
  align-items: baseline;

  &-title {
    @include font-bold-title(12px);
  }

  &-value {
    margin-left: 16px;
    @include font(12px, $cadetBlue, 400);
  }
}

[data-doc-status] {
  &[data-doc-status="Requested"],
  &[data-doc-status="Rejected"],
  &[data-doc-status="In review"] {
    color: $disabledFont;
  }
}

[data-merchant-status] {
  font-weight: 600;
  text-transform: uppercase;

  &[data-merchant-status="Pending approval"] {
    color: $warning-color;
  }
  &[data-merchant-status="Blocked"] {
    color: $error-color;
  }
  &[data-merchant-status="Approved"] {
    color: $success-color;
  }
}

[data-transaction-status] {
  font-weight: 600;
  text-transform: uppercase;

  &[data-transaction-status="New"],
  &[data-transaction-status="Processing"],
  &[data-transaction-status="Awaiting confirmation"] {
    color: $disabledFont;
  }

  &[data-transaction-status="Failed"] {
    color: $pickledBluewood;
  }

  &[data-transaction-status="Done"] {
    color: $success-color;
  }
}

[data-payout-status] {
  font-weight: 600;
  text-transform: uppercase;

  &[data-payout-status="Processing"],
  &[data-payout-status="Executing"] {
    color: $disabledFont;
  }

  &[data-payout-status="Failed"] {
    color: $pickledBluewood;
  }

  &[data-payout-status="Done"] {
    color: $success-color;
  }
}

.report-icon {
  font-size: 25px;
  color: $purpleHeart;
}

// tabs

.mat-tab-label {
  @include font(15px, $purpleHeart, 400);
}

.mat-tab-label.mat-tab-label-active {
  color: $purpleHeart !important;
}

.mat-ink-bar {
  background-color: $purpleHeart !important;
}
